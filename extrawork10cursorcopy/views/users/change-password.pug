extends ../layout

block content
  link(rel='stylesheet' href='/stylesheets/change-password.css')

  .password-container
    h1 Change Password

    #errorContainer.alert.alert-danger(style="display: none")

    form#passwordForm.password-form(action="/users/change-password", method="POST")
      .form-group
        label(for="currentPassword") Current Password:
        input#currentPassword(type="password", name="currentPassword", required)
        .error-message(style="display: none")

      .form-group
        label(for="newPassword") New Password:
        input#newPassword(type="password", name="newPassword", required, placeholder="At least 8 chars, 1 digit, 1 special char")
        .error-message(style="display: none")

      .form-group
        label(for="confirmPassword") Confirm New Password:
        input#confirmPassword(type="password", name="confirmPassword", required)
        .error-message(style="display: none")

      .form-group
        button.btn-submit(type="submit") Change Password

  script.
    const passwordForm = document.getElementById('passwordForm');
    const errorContainer = document.getElementById('errorContainer');

    // Clear error messages
    function clearErrors() {
      errorContainer.style.display = 'none';
      errorContainer.innerHTML = '';
      document.querySelectorAll('.error-message').forEach(el => {
        el.style.display = 'none';
        el.textContent = '';
      });
      document.querySelectorAll('input').forEach(input => {
        input.classList.remove('error');
      });
    }

    // Show error message
    function showError(field, message) {
      const input = document.getElementById(field);
      if (input) {
        input.classList.add('error');
        const errorElement = input.nextElementSibling;
        if (errorElement && errorElement.classList.contains('error-message')) {
          errorElement.textContent = message;
          errorElement.style.display = 'block';
        }
      }
    }

    // Show general error
    function showGeneralError(message) {
      errorContainer.innerHTML = message;
      errorContainer.style.display = 'block';
    }

    passwordForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      clearErrors();

      const formData = new FormData(passwordForm);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch('/users/change-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (result.success) {
          // Redirect based on role
          window.location.href = result.redirect;
        } else if (result.errors) {
          // Display field-specific errors
          Object.entries(result.errors).forEach(([field, message]) => {
            showError(field, message);
          });
        } else if (result.error) {
          // Display general error
          showGeneralError(result.error);
        }
      } catch (error) {
        console.error('Error:', error);
        showGeneralError('An error occurred. Please try again.');
      }
    });
        
