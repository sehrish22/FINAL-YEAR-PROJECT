extends layout

block content
  link(rel='stylesheet' href='/stylesheets/chatbot.css')
  #furever-chatbot-root
    #furever-chatbot-container
      // Chat Header
      #furever-chatbot-header Welcome to FurEverHome Pet Assistant

      // Chat Display Area
      #furever-chat-display

      // User Input Section
      #furever-chat-input-section
        input#furever-chat-user-input(type="text", placeholder="Describe your ideal pet...")
        button#furever-chat-send-btn(onclick="sendMessage()") Send

  script.
    // Initialize chatbot with greeting
    window.onload = () => {
      addChatMessage("👋 Hi! What kind of pet are you looking for?", 'bot');
    };

    // Send user message to the chatbot
    async function sendMessage() {
      const userInput = document.getElementById('furever-chat-user-input');
      const userMessage = userInput.value.trim();
      if (!userMessage) return;

      // Display user message
      addChatMessage(userMessage, 'user');
      userInput.value = '';

      try {
        const response = await fetch('/chatbot', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ message: userMessage })
        });

        const data = await response.json();
        handleChatbotResponse(data);
      } catch (error) {
        addChatMessage("⚠️ Error connecting to the chatbot. Try again later.", 'bot');
      }
    }
    function parseValidPetString(petString) {
      console.log("Parsing pet string:", petString);
      const validKeys = ['type', 'breed', 'color', 'id', 'fee'];
      const result = {};

      const keyValuePairs = petString.split(',').map(pair => pair.trim());

      keyValuePairs.forEach(pair => {
        const [key, value] = pair.split(':');
        if (key && value !== undefined) {
          const formattedKey = key.trim().toLowerCase();
          if (validKeys.includes(formattedKey)) {
            result[formattedKey] = isNaN(value) ? value.trim() : isNaN(parseFloat(value)) ? value.trim() : parseFloat(value);
          }
        }
      });
      console.log("Parsed pet string:", result);
      return result;
    }



    // Display chat messages
    function addChatMessage(text, sender) {
      const chatDisplay = document.getElementById('furever-chat-display');
      const messageDiv = document.createElement('div');
      messageDiv.className = sender === 'user' ? 'furever-chat-user-msg' : 'furever-chat-bot-msg';
      messageDiv.innerHTML = text;
      chatDisplay.appendChild(messageDiv);
      chatDisplay.scrollTop = chatDisplay.scrollHeight; // Auto-scroll
    }

   // Handle chatbot response
    function handleChatbotResponse(data) {
      console.log("Chatbot response:", data.pets);
      if (data.success) {
        addChatMessage("🐾 Here are the pets matching your description:", 'bot');
        let dataa = data.pets.split('\n');
        let pets = [];
        
        dataa.forEach((pet) => {
          const validKeys = ['type', 'breed', 'color', 'id', 'fee'];
          const result = {};
          const keyValuePairs = pet.split(',').map(pair => pair.trim());
          console.log("Key-value pairs:", keyValuePairs);
          
          keyValuePairs.forEach(pair => {
            console.log("Processing pair:", pair);
            const [key, value] = pair.split(':');
            if (key && value !== undefined) {
              const formattedKey = key.trim().toLowerCase();
              if (validKeys.includes(formattedKey)) {
                result[formattedKey] = isNaN(value) ? value.trim() : isNaN(parseFloat(value)) ? value.trim() : parseFloat(value);
              }
            } else {
              console.log("Invalid pair:", pair);
            }
          });
          console.log("Parsed pet data:", result);
          
          pets.push(result); // Add parsed pet object to pets array
        });
        console.log("Parsed pets:", pets);
        if (pets.length === 1 && pets[0].id === undefined) {
          addChatMessage("😔 Sorry, no pets match your description. Try again!", 'bot');
          return;
        }
        // Format each pet's details and display
        pets.forEach(pet => {
          if(pet.id){
            addChatMessage(`🧡 <a href="/chatbot/pet/${pet.id}" target="_blank">${pet.breed}</a><br>📋 Fee: ${pet.fee}<br>Color: ${pet.color}`, 'bot');
          }
        });
      } else {
        addChatMessage("😔 Sorry, no pets match your description. Try again!", 'bot');
      }
    }
