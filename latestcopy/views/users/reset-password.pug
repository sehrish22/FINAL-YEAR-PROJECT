//- users/reset-password.pug
#resetPasswordModal.modal(style="display: none;")
  .modal-content
    span.close-btn &times;
    .login-container
      h1 Reset Password

      #resetPasswordError.alert.alert-danger(style="display: none;")
      #resetPasswordSuccess.alert.alert-success(style="display: none;")

      form#resetPasswordForm.login-form(action="/users/reset-password", method="post")
        input(type="hidden", name="token", id="resetToken")
        .login-form-group
          label(for="newPassword") New Password
          input#newPassword.login-input(type="password", name="password", placeholder="Enter new password")

        .login-form-group
          label(for="confirmPassword") Confirm Password
          input#confirmPassword.login-input(type="password", name="confirmPassword", placeholder="Confirm new password")

        .login-form-group
          input.login-btn.btn-block(type="submit", value="Reset Password")

  script.
    const resetPasswordModal = document.getElementById("resetPasswordModal");
    const resetPasswordForm = document.getElementById("resetPasswordForm");
    const resetPasswordError = document.getElementById("resetPasswordError");
    const resetPasswordSuccess = document.getElementById("resetPasswordSuccess");

    window.addEventListener("load", function () {
      const urlParams = new URLSearchParams(window.location.search);
      const token = urlParams.get("token") || urlParams.get("reset_token");
      const error = urlParams.get("error");

      if (token) {
        document.getElementById("resetToken").value = token;
        resetPasswordModal.style.display = "block";
        window.history.replaceState({}, document.title, window.location.pathname);
      } else if (error === "invalid_token" || error === "server_error") {
        resetPasswordError.textContent = error === "invalid_token"
          ? "Invalid or expired token"
          : "An error occurred. Please try again.";
        resetPasswordError.style.display = "block";
        resetPasswordModal.style.display = "block";
        window.history.replaceState({}, document.title, window.location.pathname);
      }
    });

    resetPasswordForm.addEventListener("submit", async function (e) {
      e.preventDefault();
      const formData = new FormData(resetPasswordForm);
      const data = {
        token: formData.get("token"),
        password: formData.get("password"),
        confirmPassword: formData.get("confirmPassword")
      };

      try {
        const response = await fetch("/users/reset-password", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "Accept": "application/json"
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (!response.ok) throw new Error(result.error || "An error occurred");

        if (result.success) {
          resetPasswordSuccess.textContent = result.message || "Password has been reset successfully";
          resetPasswordSuccess.style.display = "block";
          resetPasswordError.style.display = "none";
          resetPasswordForm.reset();

          setTimeout(() => {
            resetPasswordModal.style.display = "none";
            document.getElementById("loginModal").style.display = "block";
            resetPasswordSuccess.style.display = "none";
          }, 3000);
        }
      } catch (err) {
        resetPasswordError.textContent = err.message || "An error occurred";
        resetPasswordError.style.display = "block";
        resetPasswordSuccess.style.display = "none";
      }
    });
